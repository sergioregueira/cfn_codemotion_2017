# 02.yaml - Cloudformation Tutorial - Ticketea training material
#
# Template topics:
# - Modify security group (in-place update)
# - Bring up a webserver
# - Variable interpolation with !Sub
# - Tags
#
AWSTemplateFormatVersion: 2010-09-09

Description: A single EC2 instance with a static files webserver

Parameters:
    SSHKey:
        Description: The SSH Key that will be used to connect to our instance
        Type: AWS::EC2::KeyPair::KeyName  # see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
    AllowConnectionFrom:
        Description: Allow ssh connection from this specific CIDR range (eg. 1.2.3.4/32)
        Type: String
        AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})' # eg. 1.1.1.1/32
        ConstraintDescription: Must be a valid CIDR

Resources:
    PublicSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: SG rules to apply within the public subnets
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: !Ref AllowConnectionFrom
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0

    MyInstance1:
        Type: AWS::EC2::Instance
        Properties:
            KeyName: !Ref SSHKey
            InstanceType: t2.micro
            SecurityGroupIds: [!Ref PublicSecurityGroup]
            ImageId: ami-97e953f8  # ubuntu 16.04 in eu-central-1
            UserData:
                Fn::Base64: !Sub |
                  #!/bin/bash -e
                  apt-get update
                  apt-get -y install nginx-light
                  echo "<h1>Hi, my name is $HOSTNAME@${AWS::Region}</h1>" > /var/www/html/index.html
            Tags:
            - Key: Name
              Value:
                Fn::Join: # fn.join('-', [stackname, staticfileserver])
                - "-"
                - - !Ref AWS::StackName
                  - StaticFilesServer

Outputs:
    WebserverPublicIp:
        Description: Public IP of our EC2 machine
        Value: !GetAtt MyInstance1.PublicIp
